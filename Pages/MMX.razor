<MudPaper Class="d-flex flex-row flex-grow-1 gap-4 justify-space-between flex-wrap flex-sm-wrap" Elevation="0">
    <div Class="d-flex flex-row flex-grow-1 gap-4 justify-space-between">
        <MudNumericField @bind-Value="Level" Label="Skill Level" Variant="Variant.Outlined" Size="Size.Large" />

        <MudNumericField @bind-Value="MajorMod" Label="Major Modifier" Adornment="Adornment.End" AdornmentText="@($"({Major})")" Variant="Variant.Outlined" Size="Size.Large" />

        <MudNumericField @bind-Value="MinorMod" Label="Minor Modifier" Adornment="Adornment.End" AdornmentText="@($"({Minor})")" Variant="Variant.Outlined" Size="Size.Large" />

        <MudNumericField @bind-Value="MissMod" Label="Miss Modifier" Adornment="Adornment.End" AdornmentText="@($"({Miss})")" Variant="Variant.Outlined" Size="Size.Large" />

    </div>
    <div Class="d-flex flex-row flex-grow-1 gap-4 justify-space-between">
        <MudButton Style="min-width:40%" contenteditable="true" Variant="Variant.Outlined" >Skill Name</MudButton>

        <RollOut N=5 Major=Major Minor=Minor Miss=Miss D=Difficulty />
    </div>

</MudPaper>
@code {
    [Parameter]
    public int Difficulty { get; set; }

    public int Level { get; set; } = 0;

    public int MajorMod { get; set; }
    public int MinorMod { get; set; }
    public int MissMod { get; set; }

    public int Major => Math.Max(1, Level * 2) + MajorMod;
    public int Minor => MinorMod;
    public int Miss => -1 * Math.Max(1, Level) + MissMod;

}
